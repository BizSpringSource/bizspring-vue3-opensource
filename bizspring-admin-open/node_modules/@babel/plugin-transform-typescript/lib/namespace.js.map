{"version":3,"names":["_core","require","transpileNamespace","path","allowNamespaces","node","declare","id","type","remove","get","buildCodeFrameError","name","value","handleNested","t","cloneNode","scope","hasOwnBinding","replaceWith","registerDeclaration","replaceWithMultiple","getDeclaration","variableDeclaration","variableDeclarator","identifier","getMemberExpression","itemName","memberExpression","handleVariableDeclaration","hub","kind","file","declarations","every","declarator","isIdentifier","init","assignmentExpression","bindingIdentifiers","getBindingIdentifiers","assignments","idName","push","expressionStatement","sequenceExpression","buildNestedAmbientModuleError","buildError","Error","parentExport","names","Set","realName","assertIdentifier","generateUid","namespaceTopLevel","isTSModuleBlock","body","exportNamedDeclaration","isEmpty","i","length","subNode","transformed","moduleName","has","add","splice","isTypeScript","declaration","nodes","fallthroughValue","objectExpression","memberExpr","template","expression","ast","statement"],"sources":["../src/namespace.ts"],"sourcesContent":["import { template, types as t } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\n\nexport default function transpileNamespace(\n  path: NodePath<t.TSModuleDeclaration>,\n  allowNamespaces: boolean,\n) {\n  if (path.node.declare || path.node.id.type === \"StringLiteral\") {\n    path.remove();\n    return;\n  }\n\n  if (!allowNamespaces) {\n    throw path\n      .get(\"id\")\n      .buildCodeFrameError(\n        \"Namespace not marked type-only declare.\" +\n          \" Non-declarative namespaces are only supported experimentally in Babel.\" +\n          \" To enable and review caveats see:\" +\n          \" https://babeljs.io/docs/en/babel-plugin-transform-typescript\",\n      );\n  }\n\n  const name = path.node.id.name;\n  const value = handleNested(path, t.cloneNode(path.node, true));\n  if (value === null) {\n    path.remove();\n  } else if (path.scope.hasOwnBinding(name)) {\n    path.replaceWith(value);\n  } else {\n    path.scope.registerDeclaration(\n      path.replaceWithMultiple([getDeclaration(name), value])[0],\n    );\n  }\n}\n\nfunction getDeclaration(name: string) {\n  return t.variableDeclaration(\"let\", [\n    t.variableDeclarator(t.identifier(name)),\n  ]);\n}\n\nfunction getMemberExpression(name: string, itemName: string) {\n  return t.memberExpression(t.identifier(name), t.identifier(itemName));\n}\n\n/**\n * Convert export const foo = 1 to Namespace.foo = 1;\n *\n * @param {t.VariableDeclaration} node given variable declaration, e.g. `const foo = 1`\n * @param {string} name the generated unique namespace member name\n * @param {*} hub An instance implements HubInterface defined in `@babel/traverse` that can throw a code frame error\n */\nfunction handleVariableDeclaration(\n  node: t.VariableDeclaration,\n  name: string,\n  hub: any,\n): t.Statement[] {\n  if (node.kind !== \"const\") {\n    throw hub.file.buildCodeFrameError(\n      node,\n      \"Namespaces exporting non-const are not supported by Babel.\" +\n        \" Change to const or see:\" +\n        \" https://babeljs.io/docs/en/babel-plugin-transform-typescript\",\n    );\n  }\n  const { declarations } = node;\n  if (\n    declarations.every(\n      (declarator): declarator is t.VariableDeclarator & { id: t.Identifier } =>\n        t.isIdentifier(declarator.id),\n    )\n  ) {\n    // `export const a = 1` transforms to `const a = N.a = 1`, the output\n    // is smaller than `const a = 1; N.a = a`;\n    for (const declarator of declarations) {\n      declarator.init = t.assignmentExpression(\n        \"=\",\n        getMemberExpression(name, declarator.id.name),\n        declarator.init,\n      );\n    }\n    return [node];\n  }\n  // Now we have pattern in declarators\n  // `export const [a] = 1` transforms to `const [a] = 1; N.a = a`\n  const bindingIdentifiers = t.getBindingIdentifiers(node);\n  const assignments = [];\n  // getBindingIdentifiers returns an object without prototype.\n  // eslint-disable-next-line guard-for-in\n  for (const idName in bindingIdentifiers) {\n    assignments.push(\n      t.assignmentExpression(\n        \"=\",\n        getMemberExpression(name, idName),\n        t.cloneNode(bindingIdentifiers[idName]),\n      ),\n    );\n  }\n  return [node, t.expressionStatement(t.sequenceExpression(assignments))];\n}\n\nfunction buildNestedAmbientModuleError(path: NodePath, node: t.Node) {\n  return path.hub.buildError(\n    node,\n    \"Ambient modules cannot be nested in other modules or namespaces.\",\n    Error,\n  );\n}\n\nfunction handleNested(\n  path: NodePath,\n  node: t.TSModuleDeclaration,\n  parentExport?: t.Expression,\n): t.Statement | null {\n  const names = new Set();\n  const realName = node.id;\n  t.assertIdentifier(realName);\n\n  const name = path.scope.generateUid(realName.name);\n\n  const namespaceTopLevel: t.Statement[] = t.isTSModuleBlock(node.body)\n    ? node.body.body\n    : // We handle `namespace X.Y {}` as if it was\n      //   namespace X {\n      //     export namespace Y {}\n      //   }\n      [t.exportNamedDeclaration(node.body)];\n\n  let isEmpty = true;\n\n  for (let i = 0; i < namespaceTopLevel.length; i++) {\n    const subNode = namespaceTopLevel[i];\n\n    // The first switch is mainly to detect name usage. Only export\n    // declarations require further transformation.\n    switch (subNode.type) {\n      case \"TSModuleDeclaration\": {\n        if (!t.isIdentifier(subNode.id)) {\n          throw buildNestedAmbientModuleError(path, subNode);\n        }\n\n        const transformed = handleNested(path, subNode);\n        if (transformed !== null) {\n          isEmpty = false;\n          const moduleName = subNode.id.name;\n          if (names.has(moduleName)) {\n            namespaceTopLevel[i] = transformed;\n          } else {\n            names.add(moduleName);\n            namespaceTopLevel.splice(\n              i++,\n              1,\n              getDeclaration(moduleName),\n              transformed,\n            );\n          }\n        }\n        continue;\n      }\n      case \"TSEnumDeclaration\":\n      case \"FunctionDeclaration\":\n      case \"ClassDeclaration\":\n        isEmpty = false;\n        names.add(subNode.id.name);\n        continue;\n      case \"VariableDeclaration\": {\n        isEmpty = false;\n        // getBindingIdentifiers returns an object without prototype.\n        // eslint-disable-next-line guard-for-in\n        for (const name in t.getBindingIdentifiers(subNode)) {\n          names.add(name);\n        }\n        continue;\n      }\n      default:\n        isEmpty &&= t.isTypeScript(subNode);\n        // Neither named declaration nor export, continue to next item.\n        continue;\n      case \"ExportNamedDeclaration\":\n      // Export declarations get parsed using the next switch.\n    }\n\n    if (\"declare\" in subNode.declaration && subNode.declaration.declare) {\n      continue;\n    }\n\n    // Transform the export declarations that occur inside of a namespace.\n    switch (subNode.declaration.type) {\n      case \"TSEnumDeclaration\":\n      case \"FunctionDeclaration\":\n      case \"ClassDeclaration\": {\n        isEmpty = false;\n        const itemName = subNode.declaration.id.name;\n        names.add(itemName);\n        namespaceTopLevel.splice(\n          i++,\n          1,\n          subNode.declaration,\n          t.expressionStatement(\n            t.assignmentExpression(\n              \"=\",\n              getMemberExpression(name, itemName),\n              t.identifier(itemName),\n            ),\n          ),\n        );\n        break;\n      }\n      case \"VariableDeclaration\": {\n        isEmpty = false;\n        const nodes = handleVariableDeclaration(\n          subNode.declaration,\n          name,\n          path.hub,\n        );\n        namespaceTopLevel.splice(i, nodes.length, ...nodes);\n        i += nodes.length - 1;\n        break;\n      }\n      case \"TSModuleDeclaration\": {\n        if (!t.isIdentifier(subNode.declaration.id)) {\n          throw buildNestedAmbientModuleError(path, subNode.declaration);\n        }\n\n        const transformed = handleNested(\n          path,\n          subNode.declaration,\n          t.identifier(name),\n        );\n        if (transformed !== null) {\n          isEmpty = false;\n          const moduleName = subNode.declaration.id.name;\n          if (names.has(moduleName)) {\n            namespaceTopLevel[i] = transformed;\n          } else {\n            names.add(moduleName);\n            namespaceTopLevel.splice(\n              i++,\n              1,\n              getDeclaration(moduleName),\n              transformed,\n            );\n          }\n        }\n      }\n    }\n  }\n\n  if (isEmpty) return null;\n\n  // {}\n  let fallthroughValue: t.Expression = t.objectExpression([]);\n\n  if (parentExport) {\n    const memberExpr = t.memberExpression(parentExport, realName);\n    fallthroughValue = template.expression.ast`\n      ${t.cloneNode(memberExpr)} ||\n        (${t.cloneNode(memberExpr)} = ${fallthroughValue})\n    `;\n  }\n\n  return template.statement.ast`\n    (function (${t.identifier(name)}) {\n      ${namespaceTopLevel}\n    })(${realName} || (${t.cloneNode(realName)} = ${fallthroughValue}));\n  `;\n}\n"],"mappings":"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"}