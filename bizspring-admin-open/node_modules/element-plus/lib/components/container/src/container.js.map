{"version":3,"file":"container.js","sources":["../../../../../../packages/components/container/src/container.vue"],"sourcesContent":["<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElContainer',\n})\nconst props = defineProps({\n  /**\n   * @description layout direction for child elements\n   */\n  direction: {\n    type: String,\n  },\n})\nconst slots = useSlots()\n\nconst ns = useNamespace('container')\n\nconst isVertical = computed(() => {\n  if (props.direction === 'vertical') {\n    return true\n  } else if (props.direction === 'horizontal') {\n    return false\n  }\n  if (slots && slots.default) {\n    const vNodes: VNode[] = slots.default()\n    return vNodes.some((vNode) => {\n      const tag = (vNode.type as Component).name\n      return tag === 'ElHeader' || tag === 'ElFooter'\n    })\n  } else {\n    return false\n  }\n})\n</script>\n"],"names":["useSlots","useNamespace","computed"],"mappings":";;;;;;;;;uCAWc,CAAA;AAAA,EACZ,IAAM,EAAA,aAAA;AACR,CAAA,CAAA,CAAA;;;;;;;;;;AASA,IAAA,MAAM,QAAQA,YAAS,EAAA,CAAA;AAEvB,IAAM,MAAA,EAAA,GAAKC,mBAAa,WAAW,CAAA,CAAA;AAEnC,IAAM,MAAA,UAAA,GAAaC,aAAS,MAAM;AAChC,MAAI,IAAA,KAAA,CAAM,cAAc,UAAY,EAAA;AAClC,QAAO,OAAA,IAAA,CAAA;AAAA,OACT,MAAA,IAAW,KAAM,CAAA,SAAA,KAAc,YAAc,EAAA;AAC3C,QAAO,OAAA,KAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,KAAA,IAAS,MAAM,OAAS,EAAA;AAC1B,QAAM,MAAA,MAAA,GAAkB,MAAM,OAAQ,EAAA,CAAA;AACtC,QAAO,OAAA,MAAA,CAAO,IAAK,CAAA,CAAC,KAAU,KAAA;AAC5B,UAAM,MAAA,GAAA,GAAO,MAAM,IAAmB,CAAA,IAAA,CAAA;AACtC,UAAO,OAAA,GAAA,KAAQ,cAAc,GAAQ,KAAA,UAAA,CAAA;AAAA,SACtC,CAAA,CAAA;AAAA,OACI,MAAA;AACL,QAAO,OAAA,KAAA,CAAA;AAAA,OACT;AAAA,KACD,CAAA,CAAA;;;;;;;;;;;;;;"}