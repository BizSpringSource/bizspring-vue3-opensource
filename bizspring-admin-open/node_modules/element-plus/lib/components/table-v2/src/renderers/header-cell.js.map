{"version":3,"file":"header-cell.js","sources":["../../../../../../../packages/components/table-v2/src/renderers/header-cell.tsx"],"sourcesContent":["import { HeaderCell, SortIcon } from '../components'\n// import ColumnResizer from '../table-column-resizer'\nimport { Alignment, SortOrder, oppositeOrderMap } from '../constants'\nimport { placeholderSign } from '../private'\nimport { componentToSlot, enforceUnit, tryCall } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { TableV2HeaderRowCellRendererParams } from '../components'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\nimport type { TableV2HeaderCell } from '../header-cell'\n\nexport type HeaderCellRendererProps = TableV2HeaderRowCellRendererParams &\n  UnwrapNestedRefs<Pick<UseTableReturn, 'onColumnSorted'>> &\n  Pick<TableV2Props, 'sortBy' | 'sortState' | 'headerCellProps'> & {\n    ns: UseNamespaceReturn\n  }\n\nconst HeaderCellRenderer: FunctionalComponent<HeaderCellRendererProps> = (\n  props,\n  { slots }\n) => {\n  const { column, ns, style, onColumnSorted } = props\n\n  const cellStyle = enforceUnit(style)\n\n  if (column.placeholderSign === placeholderSign) {\n    return (\n      <div class={ns.em('header-row-cell', 'placeholder')} style={cellStyle} />\n    )\n  }\n\n  const { headerCellRenderer, headerClass, sortable } = column\n\n  /**\n   * render Cell children\n   */\n\n  const cellProps = {\n    ...props,\n    class: ns.e('header-cell-text'),\n  }\n\n  const cellRenderer =\n    componentToSlot<typeof cellProps>(headerCellRenderer) ||\n    slots.default ||\n    ((props: TableV2HeaderCell) => <HeaderCell {...props} />)\n\n  const Cell = cellRenderer(cellProps)\n\n  /**\n   * Render cell container and sort indicator\n   */\n  const { sortBy, sortState, headerCellProps } = props\n\n  let sorting: boolean, sortOrder: SortOrder\n  if (sortState) {\n    const order = sortState[column.key]\n    sorting = Boolean(oppositeOrderMap[order])\n    sortOrder = sorting ? order : SortOrder.ASC\n  } else {\n    sorting = column.key === sortBy.key\n    sortOrder = sorting ? sortBy.order : SortOrder.ASC\n  }\n\n  const cellKls = [\n    ns.e('header-cell'),\n    tryCall(headerClass, props, ''),\n    column.align === Alignment.CENTER && ns.is('align-center'),\n    column.align === Alignment.RIGHT && ns.is('align-right'),\n    sortable && ns.is('sortable'),\n  ]\n\n  const cellWrapperProps = {\n    ...tryCall(headerCellProps, props),\n    onClick: column.sortable ? onColumnSorted : undefined,\n    class: cellKls,\n    style: cellStyle,\n    ['data-key']: column.key,\n  }\n\n  // For now we don't deliver resizable column feature since it has some UX issue.\n  return (\n    <div {...cellWrapperProps}>\n      {Cell}\n\n      {sortable && (\n        <SortIcon\n          class={[ns.e('sort-icon'), sorting && ns.is('sorting')]}\n          sortOrder={sortOrder}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default HeaderCellRenderer\nexport type HeaderCellSlotProps = HeaderCellRendererProps & { class: string }\n"],"names":["enforceUnit","HeaderCellRenderer","slots","column","ns","onColumnSorted","props","placeholderSign","_createVNode","cellStyle","headerClass","sortable","componentToSlot","HeaderCell","class","oppositeOrderMap","SortOrder","tryCall","Alignment","headerCellProps","sorting","SortIcon","sortOrder","ASC"],"mappings":";;;;;;;;;;;;AAIA,MAAA,kBAAA,GAA0BA,CAAAA,KAAAA,EAAAA;;AAe1B,CAAA,KAAMC;AAEFC,EAAAA,MAAAA;AAAF,IACG,MAAA;IACG,EAAA;IAAEC,KAAF;IAAUC,cAAV;MAAA,KAAA,CAAA;AAAqBC,EAAAA,MAAAA,SAAAA,GAAAA,iBAAAA,CAAAA,KAAAA,CAAAA,CAAAA;AAArB,EAAA,IAAwCC,MAA9C,CAAA,eAAA,KAAAC,wBAAA,EAAA;AAEA,IAAA,OAAeC,eAAc,CAAA,KAAA,EAAA;;AAE7B,MAAIL,OAAOI,EAAP,SAAA;AACF,KAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;QAC8DE;AAD9D,IAAA,kBAAA;AAGD,IAAA,WAAA;;GAEK,GAAA,MAAA,CAAA;QAAA,SAAA,GAAA;IAAsBC,GAAtB,KAAA;AAAmCC,IAAAA,KAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,kBAAAA,CAAAA;AAAnC,GAAA,CAAA;AAEN,EAAA,MAAA,YAAA,GAAAC,qBAAA,CAAA,kBAAA,CAAA,IAAA,KAAA,CAAA,OAAA,KAAA,CAAA,MAAA,KAAAJ,eAAA,CAAAK,qBAAA,EAAA,MAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AACF,EAAA,MAAA,IAAA,GAAA,YAAA,CAAA,SAAA,CAAA,CAAA;AACA,EAAA,MAAA;;AAEE,IAAA,SAAe;AAEbC,IAAAA,eAAO;GAFT,GAAA,KAAA,CAAA;;AAKA,EAAA,IAAA,SAAkB,EAAA;;AAKlB,IAAA,OAAU,GAAA,OAAe,CAAAC,0BAAzB,CAAA,KAAA,CAAA,CAAA,CAAA;AAEA,IAAA,SAAA,GAAA,OAAA,GAAA,KAAA,GAAAC,mBAAA,CAAA,GAAA,CAAA;AACF,GAAA,MAAA;AACA,IAAA,OAAA,GAAA,MAAA,CAAA,GAAA,KAAA,MAAA,CAAA,GAAA,CAAA;;GACQ;QAAA,OAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,aAAA,CAAA,EAAAC,aAAA,CAAA,WAAA,EAAA,KAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,KAAAC,mBAAA,CAAA,MAAA,IAAA,EAAA,CAAA,EAAA,CAAA,cAAA,CAAA,EAAA,MAAA,CAAA,KAAA,KAAAA,mBAAA,CAAA,KAAA,IAAA,EAAA,CAAA,EAAA,CAAA,aAAA,CAAA,EAAA,QAAA,IAAA,EAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA;QAAA,gBAAA,GAAA;AAAqBC,IAAAA,GAAAA,aAAAA,CAAAA,eAAAA,EAAAA,KAAAA,CAAAA;AAArB,IAAA,OAAN,EAAA,MAAA,CAAA,QAAA,GAAA,cAAA,GAAA,KAAA,CAAA;IAEIC,KAAAA,EAAAA,OAAJ;;AACA,IAAA,CAAA,UAAA,GAAe,MAAA,CAAA,GAAA;AACb,GAAA,CAAA;AACAA,EAAAA,OAAAA,eAAiB,CAACL,uBAAD,EAAjB,CAAA,IAAA,EAAA,QAAA,IAAAP,eAAA,CAAAa,mBAAA,EAAA;AACAC,IAAAA,OAAAA,EAAS,GAAGF,CAAO,CAAA,CAAA,YAAA,EAAWJ,OAAAA,IAAUO,EAAxC,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AACD,IAAM,WAAA,EAAA,SAAA;AACLH,GAAAA,EAAAA,IAAAA,CAAAA,CAAO;;;;;"}