{"version":3,"file":"form-item2.js","sources":["../../../../../../packages/components/form/src/form-item.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"formItemRef\"\n    :class=\"formItemClasses\"\n    :role=\"isGroup ? 'group' : undefined\"\n    :aria-labelledby=\"isGroup ? labelId : undefined\"\n  >\n    <form-label-wrap\n      :is-auto-width=\"labelStyle.width === 'auto'\"\n      :update-all=\"formContext?.labelWidth === 'auto'\"\n    >\n      <component\n        :is=\"labelFor ? 'label' : 'div'\"\n        v-if=\"hasLabel\"\n        :id=\"labelId\"\n        :for=\"labelFor\"\n        :class=\"ns.e('label')\"\n        :style=\"labelStyle\"\n      >\n        <slot name=\"label\" :label=\"currentLabel\">\n          {{ currentLabel }}\n        </slot>\n      </component>\n    </form-label-wrap>\n\n    <div :class=\"ns.e('content')\" :style=\"contentStyle\">\n      <slot />\n      <transition :name=\"`${ns.namespace.value}-zoom-in-top`\">\n        <slot v-if=\"shouldShowError\" name=\"error\" :error=\"validateMessage\">\n          <div :class=\"validateClasses\">\n            {{ validateMessage }}\n          </div>\n        </slot>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  useSlots,\n  watch,\n} from 'vue'\nimport AsyncValidator from 'async-validator'\nimport { clone } from 'lodash-unified'\nimport { refDebounced } from '@vueuse/core'\nimport {\n  addUnit,\n  ensureArray,\n  getProp,\n  isBoolean,\n  isFunction,\n  isString,\n} from '@element-plus/utils'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { useId, useNamespace, useSize } from '@element-plus/hooks'\nimport { formItemProps } from './form-item'\nimport FormLabelWrap from './form-label-wrap'\n\nimport type { CSSProperties } from 'vue'\nimport type { RuleItem } from 'async-validator'\nimport type {\n  FormItemContext,\n  FormItemRule,\n  FormValidateFailure,\n} from '@element-plus/tokens'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemValidateState } from './form-item'\n\ndefineOptions({\n  name: 'ElFormItem',\n})\nconst props = defineProps(formItemProps)\nconst slots = useSlots()\n\nconst formContext = inject(formContextKey, undefined)\nconst parentFormItemContext = inject(formItemContextKey, undefined)\n\nconst _size = useSize(undefined, { formItem: false })\nconst ns = useNamespace('form-item')\n\nconst labelId = useId().value\nconst inputIds = ref<string[]>([])\n\nconst validateState = ref<FormItemValidateState>('')\nconst validateStateDebounced = refDebounced(validateState, 100)\nconst validateMessage = ref('')\nconst formItemRef = ref<HTMLDivElement>()\n// special inline value.\nlet initialValue: any = undefined\nlet isResettingField = false\n\nconst labelStyle = computed<CSSProperties>(() => {\n  if (formContext?.labelPosition === 'top') {\n    return {}\n  }\n\n  const labelWidth = addUnit(props.labelWidth || formContext?.labelWidth || '')\n  if (labelWidth) return { width: labelWidth }\n  return {}\n})\n\nconst contentStyle = computed<CSSProperties>(() => {\n  if (formContext?.labelPosition === 'top' || formContext?.inline) {\n    return {}\n  }\n  if (!props.label && !props.labelWidth && isNested) {\n    return {}\n  }\n  const labelWidth = addUnit(props.labelWidth || formContext?.labelWidth || '')\n  if (!props.label && !slots.label) {\n    return { marginLeft: labelWidth }\n  }\n  return {}\n})\n\nconst formItemClasses = computed(() => [\n  ns.b(),\n  ns.m(_size.value),\n  ns.is('error', validateState.value === 'error'),\n  ns.is('validating', validateState.value === 'validating'),\n  ns.is('success', validateState.value === 'success'),\n  ns.is('required', isRequired.value || props.required),\n  ns.is('no-asterisk', formContext?.hideRequiredAsterisk),\n  formContext?.requireAsteriskPosition === 'right'\n    ? 'asterisk-right'\n    : 'asterisk-left',\n  { [ns.m('feedback')]: formContext?.statusIcon },\n])\n\nconst _inlineMessage = computed(() =>\n  isBoolean(props.inlineMessage)\n    ? props.inlineMessage\n    : formContext?.inlineMessage || false\n)\n\nconst validateClasses = computed(() => [\n  ns.e('error'),\n  { [ns.em('error', 'inline')]: _inlineMessage.value },\n])\n\nconst propString = computed(() => {\n  if (!props.prop) return ''\n  return isString(props.prop) ? props.prop : props.prop.join('.')\n})\n\nconst hasLabel = computed<boolean>(() => {\n  return !!(props.label || slots.label)\n})\n\nconst labelFor = computed<string | undefined>(() => {\n  return props.for || inputIds.value.length === 1\n    ? inputIds.value[0]\n    : undefined\n})\n\nconst isGroup = computed<boolean>(() => {\n  return !labelFor.value && hasLabel.value\n})\n\nconst isNested = !!parentFormItemContext\n\nconst fieldValue = computed(() => {\n  const model = formContext?.model\n  if (!model || !props.prop) {\n    return\n  }\n  return getProp(model, props.prop).value\n})\n\nconst normalizedRules = computed(() => {\n  const { required } = props\n\n  const rules: FormItemRule[] = []\n\n  if (props.rules) {\n    rules.push(...ensureArray(props.rules))\n  }\n\n  const formRules = formContext?.rules\n  if (formRules && props.prop) {\n    const _rules = getProp<Arrayable<FormItemRule> | undefined>(\n      formRules,\n      props.prop\n    ).value\n    if (_rules) {\n      rules.push(...ensureArray(_rules))\n    }\n  }\n\n  if (required !== undefined) {\n    const requiredRules = rules\n      .map((rule, i) => [rule, i] as const)\n      .filter(([rule]) => Object.keys(rule).includes('required'))\n\n    if (requiredRules.length > 0) {\n      for (const [rule, i] of requiredRules) {\n        if (rule.required === required) continue\n        rules[i] = { ...rule, required }\n      }\n    } else {\n      rules.push({ required })\n    }\n  }\n\n  return rules\n})\n\nconst validateEnabled = computed(() => normalizedRules.value.length > 0)\n\nconst getFilteredRule = (trigger: string) => {\n  const rules = normalizedRules.value\n  return (\n    rules\n      .filter((rule) => {\n        if (!rule.trigger || !trigger) return true\n        if (Array.isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger)\n        } else {\n          return rule.trigger === trigger\n        }\n      })\n      // exclude trigger\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(({ trigger, ...rule }): RuleItem => rule)\n  )\n}\n\nconst isRequired = computed(() =>\n  normalizedRules.value.some((rule) => rule.required)\n)\n\nconst shouldShowError = computed(\n  () =>\n    validateStateDebounced.value === 'error' &&\n    props.showMessage &&\n    (formContext?.showMessage ?? true)\n)\n\nconst currentLabel = computed(\n  () => `${props.label || ''}${formContext?.labelSuffix || ''}`\n)\n\nconst setValidationState = (state: FormItemValidateState) => {\n  validateState.value = state\n}\n\nconst onValidationFailed = (error: FormValidateFailure) => {\n  const { errors, fields } = error\n  if (!errors || !fields) {\n    console.error(error)\n  }\n\n  setValidationState('error')\n  validateMessage.value = errors\n    ? errors?.[0]?.message ?? `${props.prop} is required`\n    : ''\n\n  formContext?.emit('validate', props.prop!, false, validateMessage.value)\n}\n\nconst onValidationSucceeded = () => {\n  setValidationState('success')\n  formContext?.emit('validate', props.prop!, true, '')\n}\n\nconst doValidate = async (rules: RuleItem[]): Promise<true> => {\n  const modelName = propString.value\n  const validator = new AsyncValidator({\n    [modelName]: rules,\n  })\n  return validator\n    .validate({ [modelName]: fieldValue.value }, { firstFields: true })\n    .then(() => {\n      onValidationSucceeded()\n      return true as const\n    })\n    .catch((err: FormValidateFailure) => {\n      onValidationFailed(err as FormValidateFailure)\n      return Promise.reject(err)\n    })\n}\n\nconst validate: FormItemContext['validate'] = async (trigger, callback) => {\n  // skip validation if its resetting\n  if (isResettingField || !props.prop) {\n    return false\n  }\n\n  const hasCallback = isFunction(callback)\n  if (!validateEnabled.value) {\n    callback?.(false)\n    return false\n  }\n\n  const rules = getFilteredRule(trigger)\n  if (rules.length === 0) {\n    callback?.(true)\n    return true\n  }\n\n  setValidationState('validating')\n\n  return doValidate(rules)\n    .then(() => {\n      callback?.(true)\n      return true as const\n    })\n    .catch((err: FormValidateFailure) => {\n      const { fields } = err\n      callback?.(false, fields)\n      return hasCallback ? false : Promise.reject(fields)\n    })\n}\n\nconst clearValidate: FormItemContext['clearValidate'] = () => {\n  setValidationState('')\n  validateMessage.value = ''\n  isResettingField = false\n}\n\nconst resetField: FormItemContext['resetField'] = async () => {\n  const model = formContext?.model\n  if (!model || !props.prop) return\n\n  const computedValue = getProp(model, props.prop)\n\n  // prevent validation from being triggered\n  isResettingField = true\n\n  computedValue.value = clone(initialValue)\n\n  await nextTick()\n  clearValidate()\n\n  isResettingField = false\n}\n\nconst addInputId: FormItemContext['addInputId'] = (id: string) => {\n  if (!inputIds.value.includes(id)) {\n    inputIds.value.push(id)\n  }\n}\n\nconst removeInputId: FormItemContext['removeInputId'] = (id: string) => {\n  inputIds.value = inputIds.value.filter((listId) => listId !== id)\n}\n\nwatch(\n  () => props.error,\n  (val) => {\n    validateMessage.value = val || ''\n    setValidationState(val ? 'error' : '')\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.validateStatus,\n  (val) => setValidationState(val || '')\n)\n\nconst context: FormItemContext = reactive({\n  ...toRefs(props),\n  $el: formItemRef,\n  size: _size,\n  validateState,\n  labelId,\n  inputIds,\n  isGroup,\n  hasLabel,\n  addInputId,\n  removeInputId,\n  resetField,\n  clearValidate,\n  validate,\n})\n\nprovide(formItemContextKey, context)\n\nonMounted(() => {\n  if (props.prop) {\n    formContext?.addField(context)\n    initialValue = clone(fieldValue.value)\n  }\n})\n\nonBeforeUnmount(() => {\n  formContext?.removeField(context)\n})\n\ndefineExpose({\n  /** @description form item size */\n  size: _size,\n  /** @description validation message */\n  validateMessage,\n  /** @description validation state */\n  validateState,\n  /** @description validate form item */\n  validate,\n  /** @description clear validation status */\n  clearValidate,\n  /** @description reset field value */\n  resetField,\n})\n</script>\n"],"names":["useSlots","inject","formContextKey","formItemContextKey","useSize","useNamespace","useId","ref","refDebounced","computed","addUnit","isBoolean","isString","getProp","ensureArray","AsyncValidator","isFunction","clone","nextTick","watch","reactive","toRefs","provide","onMounted","onBeforeUnmount"],"mappings":"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"}