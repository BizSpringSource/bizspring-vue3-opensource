{"version":3,"file":"cascader2.js","sources":["../../../../../../packages/components/cascader/src/cascader.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    :visible=\"popperVisible\"\n    :teleported=\"teleported\"\n    :popper-class=\"[nsCascader.e('dropdown'), popperClass]\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    :transition=\"`${nsCascader.namespace.value}-zoom-in-top`\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[cascaderPanelRef]=\"() => togglePopperVisible(false)\"\n        :class=\"cascaderKls\"\n        :style=\"cascaderStyle\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"currentPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"nsCascader.is('focus', popperVisible)\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"handleFocus\"\n          @blur=\"handleBlur\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              :class=\"[nsInput.e('icon'), 'icon-circle-close']\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"cascaderIconKls\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" :class=\"nsCascader.e('tags')\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            :type=\"tagType\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <template v-if=\"tag.isCollapseTag === false\">\n              <span>{{ tag.text }}</span>\n            </template>\n            <template v-else>\n              <el-tooltip\n                :disabled=\"popperVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                placement=\"bottom\"\n                effect=\"light\"\n              >\n                <template #default>\n                  <span>{{ tag.text }}</span>\n                </template>\n                <template #content>\n                  <div :class=\"nsCascader.e('collapse-tags')\">\n                    <div\n                      v-for=\"(tag2, idx) in allPresentTags.slice(1)\"\n                      :key=\"idx\"\n                      :class=\"nsCascader.e('collapse-tag')\"\n                    >\n                      <el-tag\n                        :key=\"tag2.key\"\n                        class=\"in-tooltip\"\n                        :type=\"tagType\"\n                        :size=\"tagSize\"\n                        :hit=\"tag2.hitState\"\n                        :closable=\"tag2.closable\"\n                        disable-transitions\n                        @close=\"deleteTag(tag2)\"\n                      >\n                        <span>{{ tag2.text }}</span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </template>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            :class=\"nsCascader.e('search-input')\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e as KeyboardEvent)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"panel\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props.props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        :class=\"nsCascader.e('suggestion-panel')\"\n        :view-class=\"nsCascader.e('suggestion-list')\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              nsCascader.e('suggestion-item'),\n              nsCascader.is('checked', item.checked),\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\">\n              <check />\n            </el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li :class=\"nsCascader.e('empty-text')\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, useAttrs, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { cloneDeep, debounce } from 'lodash-unified'\nimport { isClient, useCssVar, useResizeObserver } from '@vueuse/core'\nimport ElCascaderPanel from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { ClickOutside as vClickoutside } from '@element-plus/directives'\nimport {\n  useFormItem,\n  useLocale,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport { debugWarn, focusNode, getSibling, isKorean } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { ArrowDown, Check, CircleClose } from '@element-plus/icons-vue'\nimport { cascaderEmits, cascaderProps } from './cascader'\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, Ref, StyleValue } from 'vue'\nimport type {\n  CascaderNode,\n  CascaderValue,\n  Tag,\n} from '@element-plus/components/cascader-panel'\ntype cascaderPanelType = InstanceType<typeof ElCascaderPanel>\ntype tooltipType = InstanceType<typeof ElTooltip>\ntype inputType = InstanceType<typeof ElInput>\ntype suggestionPanelType = InstanceType<typeof ElScrollbar>\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(cascaderProps)\nconst emit = defineEmits(cascaderEmits)\nconst attrs = useAttrs()\n\nlet inputInitialHeight = 0\nlet pressDeleteCount = 0\n\nconst nsCascader = useNamespace('cascader')\nconst nsInput = useNamespace('input')\n\nconst { t } = useLocale()\nconst { form, formItem } = useFormItem()\n\nconst tooltipRef: Ref<tooltipType | null> = ref(null)\nconst input: Ref<inputType | null> = ref(null)\nconst tagWrapper = ref(null)\nconst panel: Ref<cascaderPanelType | null> = ref(null)\nconst suggestionPanel: Ref<suggestionPanelType | null> = ref(null)\nconst popperVisible = ref(false)\nconst inputHover = ref(false)\nconst filtering = ref(false)\nconst inputValue = ref('')\nconst searchInputValue = ref('')\nconst presentTags: Ref<Tag[]> = ref([])\nconst allPresentTags: Ref<Tag[]> = ref([])\nconst suggestions: Ref<CascaderNode[]> = ref([])\nconst isOnComposition = ref(false)\n\nconst cascaderStyle = computed<StyleValue>(() => {\n  return attrs.style as StyleValue\n})\n\nconst isDisabled = computed(() => props.disabled || form?.disabled)\nconst inputPlaceholder = computed(\n  () => props.placeholder || t('el.cascader.placeholder')\n)\nconst currentPlaceholder = computed(() =>\n  searchInputValue.value ||\n  presentTags.value.length > 0 ||\n  isOnComposition.value\n    ? ''\n    : inputPlaceholder.value\n)\nconst realSize = useSize()\nconst tagSize = computed(() =>\n  ['small'].includes(realSize.value) ? 'small' : 'default'\n)\nconst multiple = computed(() => !!props.props.multiple)\nconst readonly = computed(() => !props.filterable || multiple.value)\nconst searchKeyword = computed(() =>\n  multiple.value ? searchInputValue.value : inputValue.value\n)\nconst checkedNodes: ComputedRef<CascaderNode[]> = computed(\n  () => panel.value?.checkedNodes || []\n)\nconst clearBtnVisible = computed(() => {\n  if (\n    !props.clearable ||\n    isDisabled.value ||\n    filtering.value ||\n    !inputHover.value\n  )\n    return false\n\n  return !!checkedNodes.value.length\n})\nconst presentText = computed(() => {\n  const { showAllLevels, separator } = props\n  const nodes = checkedNodes.value\n  return nodes.length\n    ? multiple.value\n      ? ''\n      : nodes[0].calcText(showAllLevels, separator)\n    : ''\n})\n\nconst checkedValue = computed<CascaderValue>({\n  get() {\n    return cloneDeep(props.modelValue) as CascaderValue\n  },\n  set(val) {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(CHANGE_EVENT, val)\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  },\n})\n\nconst cascaderPanelRef = computed(() => {\n  return tooltipRef.value?.popperRef?.contentRef\n})\n\nconst cascaderKls = computed(() => {\n  return [\n    nsCascader.b(),\n    nsCascader.m(realSize.value),\n    nsCascader.is('disabled', isDisabled.value),\n    attrs.class,\n  ]\n})\n\nconst cascaderIconKls = computed(() => {\n  return [\n    nsInput.e('icon'),\n    'icon-arrow-down',\n    nsCascader.is('reverse', popperVisible.value),\n  ]\n})\n\nconst togglePopperVisible = (visible?: boolean) => {\n  if (isDisabled.value) return\n\n  visible = visible ?? !popperVisible.value\n\n  if (visible !== popperVisible.value) {\n    popperVisible.value = visible\n    input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n    if (visible) {\n      updatePopperPosition()\n      nextTick(panel.value?.scrollToExpandingNode)\n    } else if (props.filterable) {\n      syncPresentTextValue()\n    }\n\n    emit('visibleChange', visible)\n  }\n}\n\nconst updatePopperPosition = () => {\n  nextTick(() => {\n    tooltipRef.value?.updatePopper()\n  })\n}\n\nconst hideSuggestionPanel = () => {\n  filtering.value = false\n}\n\nconst genTag = (node: CascaderNode): Tag => {\n  const { showAllLevels, separator } = props\n  return {\n    node,\n    key: node.uid,\n    text: node.calcText(showAllLevels, separator),\n    hitState: false,\n    closable: !isDisabled.value && !node.isDisabled,\n    isCollapseTag: false,\n  }\n}\n\nconst deleteTag = (tag: Tag) => {\n  const node = tag.node as CascaderNode\n  node.doCheck(false)\n  panel.value?.calculateCheckedValue()\n  emit('removeTag', node.valueByOption)\n}\n\nconst calculatePresentTags = () => {\n  if (!multiple.value) return\n\n  const nodes = checkedNodes.value\n  const tags: Tag[] = []\n\n  const allTags: Tag[] = []\n  nodes.forEach((node) => allTags.push(genTag(node)))\n  allPresentTags.value = allTags\n\n  if (nodes.length) {\n    const [first, ...rest] = nodes\n    const restCount = rest.length\n\n    tags.push(genTag(first))\n\n    if (restCount) {\n      if (props.collapseTags) {\n        tags.push({\n          key: -1,\n          text: `+ ${restCount}`,\n          closable: false,\n          isCollapseTag: true,\n        })\n      } else {\n        rest.forEach((node) => tags.push(genTag(node)))\n      }\n    }\n  }\n\n  presentTags.value = tags\n}\n\nconst calculateSuggestions = () => {\n  const { filterMethod, showAllLevels, separator } = props\n  const res = panel.value\n    ?.getFlattedNodes(!props.props.checkStrictly)\n    ?.filter((node) => {\n      if (node.isDisabled) return false\n      node.calcText(showAllLevels, separator)\n      return filterMethod(node, searchKeyword.value)\n    })\n\n  if (multiple.value) {\n    presentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n    allPresentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n  }\n\n  filtering.value = true\n  suggestions.value = res!\n  updatePopperPosition()\n}\n\nconst focusFirstNode = () => {\n  let firstNode!: HTMLElement\n\n  if (filtering.value && suggestionPanel.value) {\n    firstNode = suggestionPanel.value.$el.querySelector(\n      `.${nsCascader.e('suggestion-item')}`\n    )\n  } else {\n    firstNode = panel.value?.$el.querySelector(\n      `.${nsCascader.b('node')}[tabindex=\"-1\"]`\n    )\n  }\n\n  if (firstNode) {\n    firstNode.focus()\n    !filtering.value && firstNode.click()\n  }\n}\n\nconst updateStyle = () => {\n  const inputInner = input.value?.input\n  const tagWrapperEl = tagWrapper.value\n  const suggestionPanelEl = suggestionPanel.value?.$el\n\n  if (!isClient || !inputInner) return\n\n  if (suggestionPanelEl) {\n    const suggestionList = suggestionPanelEl.querySelector(\n      `.${nsCascader.e('suggestion-list')}`\n    )\n    suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n  }\n\n  if (tagWrapperEl) {\n    const { offsetHeight } = tagWrapperEl\n    const height =\n      presentTags.value.length > 0\n        ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n        : `${inputInitialHeight}px`\n    inputInner.style.height = height\n    updatePopperPosition()\n  }\n}\n\nconst getCheckedNodes = (leafOnly: boolean) => {\n  return panel.value?.getCheckedNodes(leafOnly)\n}\n\nconst handleExpandChange = (value: CascaderValue) => {\n  updatePopperPosition()\n  emit('expandChange', value)\n}\n\nconst handleComposition = (event: CompositionEvent) => {\n  const text = (event.target as HTMLInputElement)?.value\n  if (event.type === 'compositionend') {\n    isOnComposition.value = false\n    nextTick(() => handleInput(text))\n  } else {\n    const lastCharacter = text[text.length - 1] || ''\n    isOnComposition.value = !isKorean(lastCharacter)\n  }\n}\n\nconst handleKeyDown = (e: KeyboardEvent) => {\n  if (isOnComposition.value) return\n\n  switch (e.code) {\n    case EVENT_CODE.enter:\n      togglePopperVisible()\n      break\n    case EVENT_CODE.down:\n      togglePopperVisible(true)\n      nextTick(focusFirstNode)\n      e.preventDefault()\n      break\n    case EVENT_CODE.esc:\n      if (popperVisible.value === true) {\n        e.preventDefault()\n        e.stopPropagation()\n        togglePopperVisible(false)\n      }\n      break\n    case EVENT_CODE.tab:\n      togglePopperVisible(false)\n      break\n  }\n}\n\nconst handleClear = () => {\n  panel.value?.clearCheckedNodes()\n  if (!popperVisible.value && props.filterable) {\n    syncPresentTextValue()\n  }\n  togglePopperVisible(false)\n}\n\nconst syncPresentTextValue = () => {\n  const { value } = presentText\n  inputValue.value = value\n  searchInputValue.value = value\n}\n\nconst handleSuggestionClick = (node: CascaderNode) => {\n  const { checked } = node\n\n  if (multiple.value) {\n    panel.value?.handleCheckChange(node, !checked, false)\n  } else {\n    !checked && panel.value?.handleCheckChange(node, true, false)\n    togglePopperVisible(false)\n  }\n}\n\nconst handleSuggestionKeyDown = (e: KeyboardEvent) => {\n  const target = e.target as HTMLElement\n  const { code } = e\n\n  switch (code) {\n    case EVENT_CODE.up:\n    case EVENT_CODE.down: {\n      const distance = code === EVENT_CODE.up ? -1 : 1\n      focusNode(\n        getSibling(\n          target,\n          distance,\n          `.${nsCascader.e('suggestion-item')}[tabindex=\"-1\"]`\n        ) as HTMLElement\n      )\n      break\n    }\n    case EVENT_CODE.enter:\n      target.click()\n      break\n  }\n}\n\nconst handleDelete = () => {\n  const tags = presentTags.value\n  const lastTag = tags[tags.length - 1]\n  pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n  if (!lastTag || !pressDeleteCount || (props.collapseTags && tags.length > 1))\n    return\n\n  if (lastTag.hitState) {\n    deleteTag(lastTag)\n  } else {\n    lastTag.hitState = true\n  }\n}\n\nconst handleFocus = (e: FocusEvent) => {\n  emit('focus', e)\n}\n\nconst handleBlur = (e: FocusEvent) => {\n  emit('blur', e)\n}\n\nconst handleFilter = debounce(() => {\n  const { value } = searchKeyword\n\n  if (!value) return\n\n  const passed = props.beforeFilter(value)\n\n  if (isPromise(passed)) {\n    passed.then(calculateSuggestions).catch(() => {\n      /* prevent log error */\n    })\n  } else if (passed !== false) {\n    calculateSuggestions()\n  } else {\n    hideSuggestionPanel()\n  }\n}, props.debounce)\n\nconst handleInput = (val: string, e?: KeyboardEvent) => {\n  !popperVisible.value && togglePopperVisible(true)\n\n  if (e?.isComposing) return\n\n  val ? handleFilter() : hideSuggestionPanel()\n}\n\nwatch(filtering, updatePopperPosition)\n\nwatch([checkedNodes, isDisabled], calculatePresentTags)\n\nwatch(presentTags, () => {\n  nextTick(() => updateStyle())\n})\n\nwatch(presentText, syncPresentTextValue, { immediate: true })\n\nonMounted(() => {\n  const inputInner = input.value!.input!\n\n  const inputInnerHeight =\n    Number.parseFloat(\n      useCssVar(nsInput.cssVarName('input-height'), inputInner).value\n    ) - 2\n\n  inputInitialHeight = inputInner.offsetHeight || inputInnerHeight\n  useResizeObserver(inputInner, updateStyle)\n})\n\ndefineExpose({\n  /**\n   * @description get an array of currently selected node\n   */\n  getCheckedNodes,\n  /**\n   * @description cascader panel ref\n   */\n  cascaderPanelRef,\n})\n</script>\n"],"names":["useAttrs","useNamespace","useLocale","useFormItem","ref","computed","useSize","UPDATE_MODEL_EVENT","CHANGE_EVENT","debugWarn","nextTick","isClient","isKorean","EVENT_CODE","focusNode","getSibling","debounce","isPromise","watch"],"mappings":"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"}