{"version":3,"file":"steps2.mjs","sources":["../../../../../../packages/components/steps/src/steps.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(simple ? 'simple' : direction)]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { provide, ref, watch } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { stepsEmits, stepsProps } from './steps'\n\nimport type { Ref } from 'vue'\nimport type { StepItemState } from './item.vue'\n\ndefineOptions({\n  name: 'ElSteps',\n})\n\nconst props = defineProps(stepsProps)\nconst emit = defineEmits(stepsEmits)\n\nconst ns = useNamespace('steps')\n\nconst steps: Ref<StepItemState[]> = ref([])\n\nwatch(steps, () => {\n  steps.value.forEach((instance: StepItemState, index: number) => {\n    instance.setIndex(index)\n  })\n})\n\nprovide('ElSteps', { props, steps })\n\nwatch(\n  () => props.active,\n  (newVal: number, oldVal: number) => {\n    emit(CHANGE_EVENT, newVal, oldVal)\n  }\n)\n</script>\n"],"names":[],"mappings":";;;;;;;;mCAec,CAAA;AAAA,EACZ,IAAM,EAAA,SAAA;AACR,CAAA,CAAA,CAAA;;;;;;;AAKA,IAAM,MAAA,EAAA,GAAK,aAAa,OAAO,CAAA,CAAA;AAE/B,IAAM,MAAA,KAAA,GAA8B,GAAI,CAAA,EAAE,CAAA,CAAA;AAE1C,IAAA,KAAA,CAAM,OAAO,MAAM;AACjB,MAAA,KAAA,CAAM,KAAM,CAAA,OAAA,CAAQ,CAAC,QAAA,EAAyB,KAAkB,KAAA;AAC9D,QAAA,QAAA,CAAS,SAAS,KAAK,CAAA,CAAA;AAAA,OACxB,CAAA,CAAA;AAAA,KACF,CAAA,CAAA;AAED,IAAA,OAAA,CAAQ,SAAW,EAAA,EAAE,KAAO,EAAA,KAAA,EAAO,CAAA,CAAA;AAEnC,IAAA,KAAA,CACE,MAAM,KAAA,CAAM,MACZ,EAAA,CAAC,QAAgB,MAAmB,KAAA;AAClC,MAAK,IAAA,CAAA,YAAA,EAAc,QAAQ,MAAM,CAAA,CAAA;AAAA,KAErC,CAAA,CAAA;;;;;;;;;;;;;;"}