{"version":3,"file":"basic-date-table.mjs","sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-date-table.vue"],"sourcesContent":["<template>\n  <table\n    role=\"grid\"\n    :aria-label=\"t('el.datepicker.dateTablePrompt')\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n    :class=\"[ns.b(), { 'is-week-mode': selectionMode === 'week' }]\"\n    @click=\"handlePickDate\"\n    @mousemove=\"handleMouseMove\"\n    @mousedown.prevent=\"handleMouseDown\"\n    @mouseup=\"handleMouseUp\"\n  >\n    <tbody ref=\"tbodyRef\">\n      <tr>\n        <th v-if=\"showWeekNumber\" scope=\"col\">{{ t('el.datepicker.week') }}</th>\n        <th\n          v-for=\"(week, key) in WEEKS\"\n          :key=\"key\"\n          scope=\"col\"\n          :aria-label=\"t('el.datepicker.weeksFull.' + week)\"\n        >\n          {{ t('el.datepicker.weeks.' + week) }}\n        </th>\n      </tr>\n      <tr\n        v-for=\"(row, rowKey) in rows\"\n        :key=\"rowKey\"\n        :class=\"[ns.e('row'), { current: isWeekActive(row[1]) }]\"\n      >\n        <td\n          v-for=\"(cell, columnKey) in row\"\n          :key=\"`${rowKey}.${columnKey}`\"\n          :ref=\"(el) => isSelectedCell(cell) && (currentCellRef = el as HTMLElement)\"\n          :class=\"getCellClasses(cell)\"\n          :aria-current=\"cell.isCurrent ? 'date' : undefined\"\n          :aria-selected=\"cell.isCurrent\"\n          :tabindex=\"isSelectedCell(cell) ? 0 : -1\"\n          @focus=\"handleFocus\"\n        >\n          <el-date-picker-cell :cell=\"cell\" />\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, ref, unref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { flatten } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { castArray } from '@element-plus/utils'\nimport { basicDateTableProps } from '../props/basic-date-table'\nimport { buildPickerTable } from '../utils'\nimport ElDatePickerCell from './basic-cell-render'\n\nimport type { Dayjs } from 'dayjs'\nimport type { DateCell } from '../date-picker.type'\n\nconst props = defineProps(basicDateTableProps)\nconst emit = defineEmits(['changerange', 'pick', 'select'])\n\nconst ns = useNamespace('date-table')\n\nconst { t, lang } = useLocale()\n\nconst tbodyRef = ref<HTMLElement>()\nconst currentCellRef = ref<HTMLElement>()\n// data\nconst lastRow = ref<number>()\nconst lastColumn = ref<number>()\nconst tableRows = ref<DateCell[][]>([[], [], [], [], [], []])\n\nlet focusWithClick = false\n\n// todo better way to get Day.js locale object\nconst firstDayOfWeek = (props.date as any).$locale().weekStart || 7\nconst WEEKS_CONSTANT = props.date\n  .locale('en')\n  .localeData()\n  .weekdaysShort()\n  .map((_) => _.toLowerCase())\n\nconst offsetDay = computed(() => {\n  // Sunday 7(0), cal the left and right offset days, 3217654, such as Monday is -1, the is to adjust the position of the first two rows of dates\n  return firstDayOfWeek > 3 ? 7 - firstDayOfWeek : -firstDayOfWeek\n})\n\nconst startDate = computed(() => {\n  const startDayOfMonth = props.date.startOf('month')\n  return startDayOfMonth.subtract(startDayOfMonth.day() || 7, 'day')\n})\n\nconst WEEKS = computed(() => {\n  return WEEKS_CONSTANT.concat(WEEKS_CONSTANT).slice(\n    firstDayOfWeek,\n    firstDayOfWeek + 7\n  )\n})\n\nconst hasCurrent = computed<boolean>(() => {\n  return flatten(rows.value).some((row) => {\n    return row.isCurrent\n  })\n})\n\nconst days = computed(() => {\n  const startOfMonth = props.date.startOf('month')\n  const startOfMonthDay = startOfMonth.day() || 7 // day of first day\n  const dateCountOfMonth = startOfMonth.daysInMonth()\n\n  const dateCountOfLastMonth = startOfMonth.subtract(1, 'month').daysInMonth()\n\n  return {\n    startOfMonthDay,\n    dateCountOfMonth,\n    dateCountOfLastMonth,\n  }\n})\n\nconst selectedDate = computed(() => {\n  return props.selectionMode === 'dates'\n    ? (castArray(props.parsedValue) as Dayjs[])\n    : ([] as Dayjs[])\n})\n\n// Return value indicates should the counter be incremented\nconst setDateText = (\n  cell: DateCell,\n  {\n    count,\n    rowIndex,\n    columnIndex,\n  }: {\n    count: number\n    rowIndex: number\n    columnIndex: number\n  }\n): boolean => {\n  const { startOfMonthDay, dateCountOfMonth, dateCountOfLastMonth } =\n    unref(days)\n  const offset = unref(offsetDay)\n  if (rowIndex >= 0 && rowIndex <= 1) {\n    const numberOfDaysFromPreviousMonth =\n      startOfMonthDay + offset < 0\n        ? 7 + startOfMonthDay + offset\n        : startOfMonthDay + offset\n\n    if (columnIndex + rowIndex * 7 >= numberOfDaysFromPreviousMonth) {\n      cell.text = count\n      return true\n    } else {\n      cell.text =\n        dateCountOfLastMonth -\n        (numberOfDaysFromPreviousMonth - (columnIndex % 7)) +\n        1 +\n        rowIndex * 7\n      cell.type = 'prev-month'\n    }\n  } else {\n    if (count <= dateCountOfMonth) {\n      cell.text = count\n    } else {\n      cell.text = count - dateCountOfMonth\n      cell.type = 'next-month'\n    }\n    return true\n  }\n  return false\n}\n\nconst setCellMetadata = (\n  cell: DateCell,\n  {\n    columnIndex,\n    rowIndex,\n  }: {\n    columnIndex: number\n    rowIndex: number\n  },\n  count: number\n) => {\n  const { disabledDate, cellClassName } = props\n  const _selectedDate = unref(selectedDate)\n  const shouldIncrement = setDateText(cell, { count, rowIndex, columnIndex })\n\n  const cellDate = cell.dayjs!.toDate()\n  cell.selected = _selectedDate.find(\n    (d) => d.valueOf() === cell.dayjs!.valueOf()\n  )\n  cell.isSelected = !!cell.selected\n  cell.isCurrent = isCurrent(cell)\n  cell.disabled = disabledDate?.(cellDate)\n  cell.customClass = cellClassName?.(cellDate)\n  return shouldIncrement\n}\n\nconst setRowMetadata = (row: DateCell[]) => {\n  if (props.selectionMode === 'week') {\n    const [start, end] = props.showWeekNumber ? [1, 7] : [0, 6]\n    const isActive = isWeekActive(row[start + 1])\n    row[start].inRange = isActive\n    row[start].start = isActive\n    row[end].inRange = isActive\n    row[end].end = isActive\n  }\n}\n\nconst rows = computed(() => {\n  const { minDate, maxDate, rangeState, showWeekNumber } = props\n\n  const offset = offsetDay.value\n  const rows_ = tableRows.value\n  const dateUnit = 'day'\n  let count = 1\n\n  if (showWeekNumber) {\n    for (let rowIndex = 0; rowIndex < 6; rowIndex++) {\n      if (!rows_[rowIndex][0]) {\n        rows_[rowIndex][0] = {\n          type: 'week',\n          text: startDate.value.add(rowIndex * 7 + 1, dateUnit).week(),\n        }\n      }\n    }\n  }\n\n  buildPickerTable({ row: 6, column: 7 }, rows_, {\n    startDate: minDate,\n    columnIndexOffset: showWeekNumber ? 1 : 0,\n    nextEndDate:\n      rangeState.endDate ||\n      maxDate ||\n      (rangeState.selecting && minDate) ||\n      null,\n    now: dayjs().locale(unref(lang)).startOf(dateUnit),\n    unit: dateUnit,\n    relativeDateGetter: (idx: number) =>\n      startDate.value.add(idx - offset, dateUnit),\n    setCellMetadata: (...args) => {\n      if (setCellMetadata(...args, count)) {\n        count += 1\n      }\n    },\n\n    setRowMetadata,\n  })\n\n  return rows_\n})\n\nwatch(\n  () => props.date,\n  async () => {\n    if (tbodyRef.value?.contains(document.activeElement)) {\n      await nextTick()\n      currentCellRef.value?.focus()\n    }\n  }\n)\n\nconst focus = async () => {\n  currentCellRef.value?.focus()\n}\n\nconst isNormalDay = (type = '') => {\n  return ['normal', 'today'].includes(type)\n}\n\nconst isCurrent = (cell: DateCell): boolean => {\n  return (\n    props.selectionMode === 'date' &&\n    isNormalDay(cell.type) &&\n    cellMatchesDate(cell, props.parsedValue as Dayjs)\n  )\n}\n\nconst cellMatchesDate = (cell: DateCell, date: Dayjs) => {\n  if (!date) return false\n  return dayjs(date)\n    .locale(lang.value)\n    .isSame(props.date.date(Number(cell.text)), 'day')\n}\n\nconst getCellClasses = (cell: DateCell) => {\n  const classes: string[] = []\n  if (isNormalDay(cell.type) && !cell.disabled) {\n    classes.push('available')\n    if (cell.type === 'today') {\n      classes.push('today')\n    }\n  } else {\n    classes.push(cell.type!)\n  }\n\n  if (isCurrent(cell)) {\n    classes.push('current')\n  }\n\n  if (\n    cell.inRange &&\n    (isNormalDay(cell.type) || props.selectionMode === 'week')\n  ) {\n    classes.push('in-range')\n\n    if (cell.start) {\n      classes.push('start-date')\n    }\n\n    if (cell.end) {\n      classes.push('end-date')\n    }\n  }\n\n  if (cell.disabled) {\n    classes.push('disabled')\n  }\n\n  if (cell.selected) {\n    classes.push('selected')\n  }\n\n  if (cell.customClass) {\n    classes.push(cell.customClass)\n  }\n\n  return classes.join(' ')\n}\n\nconst getDateOfCell = (row: number, column: number) => {\n  const offsetFromStart =\n    row * 7 + (column - (props.showWeekNumber ? 1 : 0)) - offsetDay.value\n  return startDate.value.add(offsetFromStart, 'day')\n}\n\nconst handleMouseMove = (event: MouseEvent) => {\n  if (!props.rangeState.selecting) return\n\n  let target = event.target as HTMLElement\n  if (target.tagName === 'SPAN') {\n    target = target.parentNode?.parentNode as HTMLElement\n  }\n  if (target.tagName === 'DIV') {\n    target = target.parentNode as HTMLElement\n  }\n  if (target.tagName !== 'TD') return\n\n  const row = (target.parentNode as HTMLTableRowElement).rowIndex - 1\n  const column = (target as HTMLTableCellElement).cellIndex\n\n  // can not select disabled date\n  if (rows.value[row][column].disabled) return\n\n  // only update rangeState when mouse moves to a new cell\n  // this avoids frequent Date object creation and improves performance\n  if (row !== lastRow.value || column !== lastColumn.value) {\n    lastRow.value = row\n    lastColumn.value = column\n    emit('changerange', {\n      selecting: true,\n      endDate: getDateOfCell(row, column),\n    })\n  }\n}\n\nconst isSelectedCell = (cell: DateCell) => {\n  return (\n    (!hasCurrent.value && cell?.text === 1 && cell.type === 'normal') ||\n    cell.isCurrent\n  )\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  if (focusWithClick || hasCurrent.value || props.selectionMode !== 'date')\n    return\n  handlePickDate(event, true)\n}\n\nconst handleMouseDown = (event: MouseEvent) => {\n  const target = (event.target as HTMLElement).closest('td')\n  if (!target) return\n  focusWithClick = true\n}\n\nconst handleMouseUp = (event: MouseEvent) => {\n  const target = (event.target as HTMLElement).closest('td')\n  if (!target) return\n  focusWithClick = false\n}\n\nconst handlePickDate = (\n  event: FocusEvent | MouseEvent,\n  isKeyboardMovement = false\n) => {\n  const target = (event.target as HTMLElement).closest('td')\n\n  if (!target) return\n\n  const row = (target.parentNode as HTMLTableRowElement).rowIndex - 1\n  const column = (target as HTMLTableCellElement).cellIndex\n  const cell = rows.value[row][column]\n\n  if (cell.disabled || cell.type === 'week') return\n\n  const newDate = getDateOfCell(row, column)\n\n  if (props.selectionMode === 'range') {\n    if (!props.rangeState.selecting || !props.minDate) {\n      emit('pick', { minDate: newDate, maxDate: null })\n      emit('select', true)\n    } else {\n      if (newDate >= props.minDate) {\n        emit('pick', { minDate: props.minDate, maxDate: newDate })\n      } else {\n        emit('pick', { minDate: newDate, maxDate: props.minDate })\n      }\n      emit('select', false)\n    }\n  } else if (props.selectionMode === 'date') {\n    emit('pick', newDate, isKeyboardMovement)\n  } else if (props.selectionMode === 'week') {\n    const weekNumber = newDate.week()\n    const value = `${newDate.year()}w${weekNumber}`\n    emit('pick', {\n      year: newDate.year(),\n      week: weekNumber,\n      value,\n      date: newDate.startOf('week'),\n    })\n  } else if (props.selectionMode === 'dates') {\n    const newValue = cell.selected\n      ? castArray(props.parsedValue).filter(\n          (d) => d?.valueOf() !== newDate.valueOf()\n        )\n      : castArray(props.parsedValue).concat([newDate])\n    emit('pick', newValue)\n  }\n}\n\nconst isWeekActive = (cell: DateCell) => {\n  if (props.selectionMode !== 'week') return false\n  let newDate = props.date.startOf('day')\n\n  if (cell.type === 'prev-month') {\n    newDate = newDate.subtract(1, 'month')\n  }\n\n  if (cell.type === 'next-month') {\n    newDate = newDate.add(1, 'month')\n  }\n\n  newDate = newDate.date(Number.parseInt(cell.text as any, 10))\n\n  if (props.parsedValue && !Array.isArray(props.parsedValue)) {\n    const dayOffset = ((props.parsedValue.day() - firstDayOfWeek + 7) % 7) - 1\n    const weekDate = props.parsedValue.subtract(dayOffset, 'day')\n    return weekDate.isSame(newDate, 'day')\n  }\n  return false\n}\n\ndefineExpose({\n  /**\n   * @description focus on current cell\n   */\n  focus,\n})\n</script>\n"],"names":[],"mappings":"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"}